{"version":3,"sources":["components/cardcomponent/card.component.jsx","components/card/card-list.components.jsx","components/search-box.component/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","style","textAlign","color","email","CardList","monsters","map","Search","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAaeA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDH,UAAU,OAAOI,IAAI,YACvF,oBAAIJ,UAAU,OAAd,SAAsBD,EAAMG,QAAQG,OACpC,mBAAGC,MAAO,CAACC,UAAU,SAASC,MAAM,SAApC,SAA+CT,EAAMG,QAAQO,YCavDC,G,MAjBE,SAACX,GACd,OACA,qBAAKC,UAAU,YAAf,SAOGD,EAAMY,SAASC,KAAI,SAAAV,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCGbU,G,MAbA,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACzB,OACI,8BACI,uBACHf,UAAU,OACZgB,SAAUD,EACVE,KAAK,SACJH,YAAaA,QCkCNI,G,wDAtCb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAAAI,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdlC,EAAKC,MAAQ,CACZb,SAAS,GACTU,YAAY,IAJF,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAQzC,WAAS,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA9B,GAAO,OAC5CA,EAAQG,KAAK4B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKjC,UAAU,OAAf,UACE,oBAAIA,UAAU,WAAd,8BACC,cAAC,EAAD,CAAQc,YAAa,kBACrBC,aAAce,KAAKf,eAClB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA/BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8905d21.chunk.js","sourcesContent":["import react from \"react\";\nimport './card.css'\n\nconst Card = (props) =>{\n    return(\n        <div className='card-container'>\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} className='robo' alt='monster'/>\n         <h4 className='head'>{props.monster.name}</h4>\n         <p style={{textAlign:'center',color:'black'}}>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card","import react from \"react\";\nimport Card from '../cardcomponent/card.component'\nimport './cardlist.css'\n\nconst CardList = (props) =>{\n    return(\n    <div className='card-list'>\n         {/* {\n         props.monsters.map(monster => (\n         <Card key={monster.id} monster={monster}></Card>\n       ))\n     } */}\n     {\n       props.monsters.map(monster =>(\n         <Card key={monster.id} monster={monster}/>\n       ))\n     }\n    </div>\n    )\n}\n\nexport default CardList","import react from \"react\";\n\nimport './search.css'\n\nconst Search = ({placeholder,handleChange}) =>{\n    return(\n        <div>\n            <input \n         className='text'\n       onChange={handleChange} \n       type='search'\n        placeholder={placeholder}/>\n      \n        </div>\n    )\n}\n\nexport default Search","import React ,{Component} from 'react';\nimport CardList from './components/card/card-list.components';\nimport Search from './components/search-box.component/search'\nimport './App.css'\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n     monsters:[],\n     searchField:''\n    }\n    // this.handleChange=this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n \n  handleChange = e =>{\n  this.setState({searchField:e.target.value})\n  }\n\n\nrender(){\n  const {monsters,searchField} =this.state;\n  const filterMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n  return(\n    <div className='main'>\n      <h2 className='textarea'>Monsters Rolodex</h2>\n       <Search placeholder={'serach Monsters'} \n       handleChange={this.handleChange}/>\n        <CardList monsters={filterMonsters}/>\n     \n    \n    </div>\n  )\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}